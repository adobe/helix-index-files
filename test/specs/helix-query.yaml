version: 1
â€‹
indices:
  algolia:
    source: html
    fetch: https://{repo}-{owner}.project-helix.page/{path}
    include:
      - /pages/**
    exclude:
      - '**/Document.*'
    properties:
      author:
        select: main > div:nth-of-type(3) > p:nth-of-type(1)
        value: |
          match(el, 'by (.*)')
        faceted: true
      title:
        select: h1:first-of-type
        value: |
          textContent(el)
      date:
        select: main > div:nth-of-type(3)
        value: |
          parseTimestamp(el, '[POSTED ON] MM-DD-YYYY')
      topics:
        select: main > div:last-of-type > p:first-of-type
        values: |
          match(el, '(Topics: )? ([^,]+)')
        faceted: true
      products:
        select: main > div:last-of-type > p:nth-of-type(2)
        values: |
          match(el, '(Products: )? ([^,]+)')
        faceted: true
      hero:
        select: main > div:nth-of-type(2) img:first-of-type
        value: |
          attribute(el, 'src')
      teaser:
        select: main > div:nth-child(n+4) p
        value: |
          words(textContent(el), 0, 20)
      sourceHash:
        select: head > meta[name=x-source-hash
        value: |
          attribute(el, 'content')
        faceted: true

  azure:
    source: html
    fetch: https://{repo}-{owner}.project-helix.page/{path}
    include:
      - /pages/**
    exclude:
      - '**/Document.*'
    target: azure:default
    properties:
      author:
        select: main > div:nth-of-type(3) > p:nth-of-type(1)
        value: |
          match(el, 'by (.*)')
      title:
        select: h1:first-of-type
        value: |
          textContent(el)
      date:
        select: main > div:nth-of-type(3)
        value: |
          parseTimestamp(el, '[POSTED ON] MM-DD-YYYY')
      topics:
        select: main > div:last-of-type > p:first-of-type
        values: |
          match(el, '(Topics: )? ([^,]+)')
      products:
        select: main > div:last-of-type > p:nth-of-type(2)
        values: |
          match(el, '(Products: )? ([^,]+)')
      hero:
        select: main > div:nth-of-type(2) img:first-of-type
        value: |
          attribute(el, 'src')
      teaser:
        select: main > div:nth-child(n+4) p
        value: |
          words(textContent(el), 0, 20)
      sourceHash:
        select: head > meta[name=x-source-hash
        value: |
          attribute(el, 'content')

  excel: &default
    source: html
    fetch: https://{repo}-{owner}.project-helix.page/{path}
    include:
      - /pages/en/*
    exclude:
      - '**/Document.*'
    target: https://adobe.sharepoint.com/excel
    properties:
      artist:
        select: main > div:nth-of-type(3) > p:nth-of-type(1)
        value: |
          match(el, 'by (.*)')
      title:
        select: h1:first-of-type
        value: |
          textContent(el)
      date:
        select: main > div:nth-of-type(3)
        value: |
          parseTimestamp(el, '[POSTED ON] MM-DD-YYYY')
      genres:
        select: main > div:last-of-type > p:nth-of-type(1)
        values: |
          match(el, '(Genres: )? ([^,]+)')
      sourceHash:
        select: head > meta[name=x-source-hash
        value: |
          attribute(el, 'content')

  excel-de:
    <<: *default
    include:
      - /pages/de/*
    target: https://adobe.sharepoint.com/excel-de

  excel-jp:
    <<: *default
    include:
      - /pages/jp/*
    target: https://adobe.sharepoint.com/excel-jp

